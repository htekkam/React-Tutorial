-> Short cut to create boiler plate html code in vs code
     shitf+1 -> enter
	 
selectors
----------------------------------

-> For class it is .{} and for id it is  #{}

Measurement units
--------------------------------------

pixels (px)

percentage(%)
-----------------------
-> when we give 50% or 100% means it is 50% of the main screen.

-> we can also vh to set the height of the component to screen level . For example : height: 100vh

Border
------------------
we  need to define the below properties for any Border
units border-style color

Text decoration
------------------
1.span 
2.text align
3. word spacing
4. letter spacing
-> shortcut to create sample data for paragraph is lorem20 +  enter
-> column-gap decides the gap between the columns
-> column-count property decide how many columns should be displayed in a paragraph
    sample{
    column-count: 4;
    border:1px solid black;
    column-gap: 5px;
    
}
-> We can import the font from goole fonts. There we can customize the fonts and import the url in css file as follows
@import url('https://fonts.googleapis.com/css2?family=PT+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap');

-> If we use *{  we can apply styles to all the components of th page

}
-> We use letter-spacing/ word-spacing property  to give space between letters .

box model
--------------------------
-> Each component in html contains 4 layers margin , border, padding and content.
-> In short form we can define the values for padding and margin as 
     padding: 5px 10px 15px 40px denotes top, right,bottom,left.

-> using  box-sizing property and value as 'border-box' we can fix the width of a div
otherwise the width of the div will increase with border and padding values.
box-sizing: border-box

styling images
---------------------------------------
-> when we place an image inside a div , we can use the width and height properties image to fit inside the div.
.picture-box{    //this is div
    border: 2px solid green;
    width: 300px;
    height: 300px;
}
.img-1{   //this image inside div
    width: 100%;
}
-> Similarly we can use the  below properties to style the back ground images
background-image: url("images/img-2.jpg");
    background-repeat: no-repeat;
    background-size: cover;  //to occupy the entire area
    background-position: center;  //to fit the image to center


Element selectors
-------------------------------------------
-> In this selectors like element,id, class, descendent, child . we can define different css as follows.
div h2{
    color: blue;
}
div .sample{  //descendent
    border: 5px solid green;
}
div  p{  //element
    background-color: lightsalmon;
}

div > #course{ //child
    background-color: blue;
}

Display
------------------------
-> We have display types like block, inline, inline-block, none.
block -> takes 100% width and does not allow next element .
inline -> height and width will not apply but elements displayed in one line
inline-block -> displays in line and with specified height and width.
none -> element will disappear.

Position
-----------------------
-> position-relative in addition with helper properties like top,left, bottom and right, move
the elements relative its next element

-> position-absolute means the position of the element becomes free and it is displayed according 
to the parent.It will be displayed based on the helper properties.

-> To mark the parent of this element, we need to define the position of the parent as relative,  
otherwise it will take parent as body and it will positioned according to body element.

-> from the below code box-5 position will be displayed according position of  parent element.

.parent{
    border: 1px solid black;
    width: 500px;
    margin: 100px;
    padding: 50px;
    position: relative;
}
.box-5{
    width: 100px;
    height: 100px;
    display: inline-block;
    background-color: bisque;
    color: red;
    position: absolute;
    top: 100px
}


Color elements
--------------------------------
-> We use rgb, hex and hsl for color combinations

Fixed positioning
-----------------------------------------------------
We can fix position of element using the below  css
.paper img {
    
    right: 0;
    bottom: 0;
    position: fixed;
    width: 50px;
    height: 50px;

}
-> position :sticky  allows the element to be sticked to its position and allows scrolling of other elements.
but in fixed position the element scroll to the top and disappears.

Border radius
-------------------------------------------
-> If we give border radius as  50% any div will become circle
-> If we give in px then edges will be slighly cut.
    border-radius: 50%;
    border-radius: 10px

Pseudo classes
--------------------------------
-> There are used to define special state of an element.
-> Like :hover, :active, :focus, :first-child, :last-child, :nth-child, :checked

.pseudo-demo :hover{
    width: 200px;
    height: 200px;
    
}

.test-btn:active{
    background-color: blue;
}

.input-form input:focus{
    background-color: rgb(8, 230, 156);
}
.books-list ol li:first-child {

    color: rgb(161, 14, 14);
}
.books-list ol li:nth-child(5) {

    color: rgb(161, 14, 14);
}
input[type=checkbox]:checked+label{
    color: red;
    font-size: larger;
}

Pseudo-elements
--------------------------------------------
-> These are used to style the parts of the element using ::before, ::after, ::first-line,
   ::first-letter and ::placeholder
   .test-message p::before{
   content: "This is before pseudo element ";
   color: brown;
   
}
.test-message p::after{
    content: " this is after pseudo element";
    color: blue;
}
.test-message{
    background-color: black;
}
.test-message p::first-letter{
    color: yellow;
}
.test-message p::first-line{
    color: red;
}
input::placeholder{
    color: red;
}





    